name: OpenWRT LEDE

on:
  workflow_dispatch:
    inputs:
      router:
        required: true
        default: newifi-mini-y1
        type: choice
        options:
        - newifi-mini-y1
        - phicomm-k2
        - phicomm-k2p
        - jdcloud-re-sp-01b
jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Deps
        run: |
          sudo apt-get update
          sudo apt-get -y install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pyelftools libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev

      - name: Clone Lede Sources
        run: |
          git clone https://github.com/coolsnowwolf/lede

      - name: Update & Install Feeds
        run: |
          cd lede
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Generate Config
        run: |
          cd lede
          ls ../
          cp ../${{ github.event.inputs.router }}-config ./.config
          make defconfig

      - name: Download DL
        run: |
          cd lede
          make -j8 download V=s

      - name: Build
        run: |
          cd lede
          make -j1 V=s

      - name: Upload Artifact
        uses: actions/upload-artifact@main
        with:
          name: OpenWrt_Firmware_${{ github.event.inputs.router }}
          path: ./lede/bin/targets/
